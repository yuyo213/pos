/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poscnsl2;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.border.BevelBorder;
import static poscnsl2.POSCnsl.panelChanger;
import static poscnsl2.POSCnsl.aesthetic;
import static poscnsl2.POSCnsl.tableUpdates;
import java.sql.Connection;

/**
 *
 * @author Butaw
 */
public final class mainFrame extends javax.swing.JFrame {

    Connection con = null;
    private static final mainFrame main = new mainFrame();
    Date d;
    SimpleDateFormat dbD;
    private final String dbDate;
    mainFrameEvents mEvent;
    private String itemQuantity, itemName, totalQuantity, itemPrice;

    private mainFrame() {

        initComponents();
        d = new Date();
        dbD = new SimpleDateFormat("MM-dd-yyyy");
        dbDate = dbD.format(d);
        SimpleDateFormat sdf = new SimpleDateFormat("EEEE, MMMM/dd/yyyy");
        lblDate.setText(sdf.format(d));
        time();
        setLocationRelativeTo(null);
        setResizable(false);
        tfItemCode.requestFocus();
        updateTableStock(tableStock);
        bNewTransaction.setEnabled(false);
        mEvent = mainFrameEvents.getInstance();
        mEvent.newTransaction(jTextArea1, tableSoldItems, tableStock);
        lblTransaction.setText(mEvent.getTransactionID());

    }

    public static mainFrame getInstance() {
        return main;
    }

    public void ButtonSwitch() {
        baddItem.setEnabled(false);
        bDelete.setEnabled(false);
        bcashOut.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelFrame = new javax.swing.JPanel();
        MainPanel = new javax.swing.JPanel();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSoldItems = new javax.swing.JTable();
        opPanel = new javax.swing.JPanel();
        baddItem = new javax.swing.JButton();
        bcashOut = new javax.swing.JButton();
        bNewTransaction = new javax.swing.JButton();
        bOption = new javax.swing.JButton();
        bItemViewer = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        searchPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfItemCode = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        pricePanel = new javax.swing.JPanel();
        tfQuantity = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblTransaction = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblTotStock = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblCurStock = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblExchange = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblSeller = new javax.swing.JLabel();
        lblLogOut = new javax.swing.JLabel();
        itemViewer = new javax.swing.JPanel();
        tablePanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableStock = new javax.swing.JTable();
        ItemBack = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelFrame.setLayout(new java.awt.CardLayout());

        tablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Item"));

        tableSoldItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableSoldItems.getTableHeader().setReorderingAllowed(false);
        tableSoldItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableSoldItemsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableSoldItems);
        if (tableSoldItems.getColumnModel().getColumnCount() > 0) {
            tableSoldItems.getColumnModel().getColumn(0).setResizable(false);
            tableSoldItems.getColumnModel().getColumn(1).setResizable(false);
            tableSoldItems.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
        );

        opPanel.setBackground(new java.awt.Color(255, 255, 255));
        opPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        baddItem.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        baddItem.setText("Add Item");
        baddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baddItemActionPerformed(evt);
            }
        });

        bcashOut.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        bcashOut.setText("Cash Out");
        bcashOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcashOutActionPerformed(evt);
            }
        });

        bNewTransaction.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        bNewTransaction.setText("New Transaction");
        bNewTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNewTransactionActionPerformed(evt);
            }
        });

        bOption.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        bOption.setText("Options");
        bOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOptionActionPerformed(evt);
            }
        });

        bItemViewer.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        bItemViewer.setText("Item Viewer");
        bItemViewer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bItemViewerActionPerformed(evt);
            }
        });

        bDelete.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        bDelete.setText("Delete Item");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout opPanelLayout = new javax.swing.GroupLayout(opPanel);
        opPanel.setLayout(opPanelLayout);
        opPanelLayout.setHorizontalGroup(
            opPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, opPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(opPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bItemViewer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bOption, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bNewTransaction, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(bcashOut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(baddItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        opPanelLayout.setVerticalGroup(
            opPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opPanelLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(baddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bOption, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bcashOut, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bNewTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bItemViewer, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        searchPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel1.setText("Item Code:");

        tfItemCode.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        tfItemCode.setForeground(new java.awt.Color(51, 51, 51));
        tfItemCode.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));
        tfItemCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfItemCodeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfItemCodeKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel8.setText("ID:");

        tfID.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        tfID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfIDKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pricePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pricePanel.setLayout(null);

        tfQuantity.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        tfQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfQuantityKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfQuantityKeyTyped(evt);
            }
        });
        pricePanel.add(tfQuantity);
        tfQuantity.setBounds(130, 210, 128, 26);

        lblPrice.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pricePanel.add(lblPrice);
        lblPrice.setBounds(130, 90, 128, 30);

        jLabel2.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel2.setText("Price:");
        pricePanel.add(jLabel2);
        jLabel2.setBounds(70, 90, 48, 30);

        jLabel3.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel3.setText("Quantity:");
        pricePanel.add(jLabel3);
        jLabel3.setBounds(50, 210, 72, 31);

        lblDate.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pricePanel.add(lblDate);
        lblDate.setBounds(382, 12, 280, 28);

        jLabel6.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel6.setText("Date Today:");
        pricePanel.add(jLabel6);
        jLabel6.setBounds(290, 10, 88, 30);

        jLabel7.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel7.setText("Time:");
        pricePanel.add(jLabel7);
        jLabel7.setBounds(449, 46, 40, 26);

        lblTime.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblTime.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pricePanel.add(lblTime);
        lblTime.setBounds(495, 46, 167, 29);

        lblName.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pricePanel.add(lblName);
        lblName.setBounds(130, 50, 128, 25);

        jLabel10.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel10.setText("Item Name:");
        pricePanel.add(jLabel10);
        jLabel10.setBounds(40, 50, 80, 20);

        jLabel9.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel9.setText("Transaction ID:");
        pricePanel.add(jLabel9);
        jLabel9.setBounds(361, 83, 128, 31);

        lblTransaction.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblTransaction.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pricePanel.add(lblTransaction);
        lblTransaction.setBounds(495, 83, 167, 31);

        jLabel11.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel11.setText("Total Stock:");
        pricePanel.add(jLabel11);
        jLabel11.setBounds(20, 130, 100, 30);

        lblTotStock.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblTotStock.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pricePanel.add(lblTotStock);
        lblTotStock.setBounds(130, 130, 128, 27);

        jLabel12.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel12.setText("Current Stock:");
        pricePanel.add(jLabel12);
        jLabel12.setBounds(10, 170, 120, 30);

        lblCurStock.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblCurStock.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pricePanel.add(lblCurStock);
        lblCurStock.setBounds(130, 170, 130, 30);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 51));
        jLabel5.setText("Total:");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 51));
        jLabel4.setText("Exchange:");

        lblExchange.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        lblExchange.setForeground(new java.awt.Color(0, 204, 51));

        lblTotal.setBackground(new java.awt.Color(255, 255, 255));
        lblTotal.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(0, 204, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblExchange, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblExchange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)))
        );

        pricePanel.add(jPanel1);
        jPanel1.setBounds(280, 130, 410, 110);

        jLabel13.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel13.setText("Cashier Name:");
        pricePanel.add(jLabel13);
        jLabel13.setBounds(20, 10, 110, 20);

        lblSeller.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblSeller.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pricePanel.add(lblSeller);
        lblSeller.setBounds(130, 10, 128, 25);

        lblLogOut.setBackground(new java.awt.Color(204, 204, 204));
        lblLogOut.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblLogOut.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogOut.setText("LogOut");
        lblLogOut.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblLogOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogOutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblLogOutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblLogOutMouseExited(evt);
            }
        });

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pricePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(opPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pricePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(opPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        PanelFrame.add(MainPanel, "card2");

        tablePanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Item"));

        tableStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Item Name", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableStock.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tableStock);

        javax.swing.GroupLayout tablePanel1Layout = new javax.swing.GroupLayout(tablePanel1);
        tablePanel1.setLayout(tablePanel1Layout);
        tablePanel1Layout.setHorizontalGroup(
            tablePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)
        );
        tablePanel1Layout.setVerticalGroup(
            tablePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
        );

        ItemBack.setText("Back");
        ItemBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemBackActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        javax.swing.GroupLayout itemViewerLayout = new javax.swing.GroupLayout(itemViewer);
        itemViewer.setLayout(itemViewerLayout);
        itemViewerLayout.setHorizontalGroup(
            itemViewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemViewerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ItemBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemViewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tablePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(itemViewerLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        itemViewerLayout.setVerticalGroup(
            itemViewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, itemViewerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemViewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tablePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ItemBack))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(165, Short.MAX_VALUE))
        );

        PanelFrame.add(itemViewer, "card4");

        getContentPane().add(PanelFrame, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bNewTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNewTransactionActionPerformed
        // RESET or new transaction (need to save the transac. to database!)
        int input = JOptionPane.showOptionDialog(null, "New Transaction?", "Saving Transaction",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (input == JOptionPane.OK_OPTION) {
            DefaultTableModel model = (DefaultTableModel) tableSoldItems.getModel();
            mEvent.newTransaction(jTextArea1, tableSoldItems, tableStock);
            model.fireTableDataChanged();
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            clear();
            lblTotal.setText("");
            lblExchange.setText("");
            tfID.setText("");
            lblCurStock.setText("");
            tfItemCode.setText("");
            baddItem.setEnabled(true);
            bDelete.setEnabled(true);
            bcashOut.setEnabled(true);
            bNewTransaction.setEnabled(false);
            lblTransaction.setText(mEvent.getTransactionID());
            jTextArea1.setText("");

        }
    }//GEN-LAST:event_bNewTransactionActionPerformed
    private void bOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOptionActionPerformed
        // OPTION or portal to task panel
        //taskPanel task = new taskPanel();
        taskPanel task = taskPanel.getInstance();
        panelChanger(PanelFrame, task);
        //  PanelFrame.setSize(w,h);
    }//GEN-LAST:event_bOptionActionPerformed

    private void bItemViewerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bItemViewerActionPerformed
        panelChanger(PanelFrame, itemViewer);
        try {
            con = My_Connection.dbConnection();
            updateTableStock(tableStock);
        } catch (Exception e) {

        }
    }//GEN-LAST:event_bItemViewerActionPerformed
    private void bcashOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcashOutActionPerformed
        // putting money exchange
        //    PreparedStatement pst;
        // ResultSet rs;
        if (lblTotal.getText().equals("0.0") || lblTotal.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Total is empty");
        } else {
            mEvent.setCashierName(lblSeller.getText());
            mEvent.setTime(lblTime.getText());
            mEvent.setTransactionID(lblTransaction.getText());
            mEvent.setDateToday(dbDate);
            //mEvent.setDisplayAllTotal(TOP_ALIGNMENT);
            mEvent.cashOut(jTextArea1, tableSoldItems, tableStock);
            lblExchange.setText(String.valueOf(mEvent.getMoneyExchange()));
            ButtonSwitch();
            bNewTransaction.setEnabled(true);
            lblCurStock.setText("");
            clear();
        }


    }//GEN-LAST:event_bcashOutActionPerformed

    private void tfItemCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfItemCodeKeyTyped
        // type item code
        numberonly(evt);
    }//GEN-LAST:event_tfItemCodeKeyTyped

    private void tableSoldItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableSoldItemsMouseClicked
        // table clicked
        mEvent.tableClick(tableSoldItems);
        setItemName(mEvent.getItemName());
        setTotalQuantity(String.valueOf(mEvent.getTotalStock()));
        setItemQuantity(String.valueOf(mEvent.getItemQuantity()));
        setItemPrice(String.valueOf(mEvent.getItemPrice()));
    }//GEN-LAST:event_tableSoldItemsMouseClicked

    private void tfItemCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfItemCodeKeyReleased
        // relase key pressed / type item code (real)
        numberonly(evt);
        String quer = "code";
        displayItem(tfItemCode, quer);
        clearZeros();
    }//GEN-LAST:event_tfItemCodeKeyReleased
    private void displayItem(JTextField Key, String str) {
        String idKey = Key.getText();
        mEvent.idCode(str, idKey, tableSoldItems, tableStock, baddItem, tfID, tfItemCode);
        lblName.setText(mEvent.getItemName());
        lblPrice.setText(String.valueOf(mEvent.getItemPrice()));
        tfQuantity.setText(String.valueOf(mEvent.getItemQuantity()));
        lblCurStock.setText(String.valueOf(mEvent.getCurrentStock()));
        lblTotStock.setText(String.valueOf(mEvent.getTotalStock()));
    }
    private void tfIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIDKeyReleased
        numberonly(evt);
        String quer = "ID";
        displayItem(tfID, quer);
        clearZeros();
    }//GEN-LAST:event_tfIDKeyReleased
    private void clearZeros() {
        if (lblPrice.getText().equals("0.0")) {
            clear();
        }
    }

    private void tfIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIDKeyTyped
        numberonly(evt);
    }//GEN-LAST:event_tfIDKeyTyped

    private void tfQuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfQuantityKeyTyped
        numberonly(evt);
    }//GEN-LAST:event_tfQuantityKeyTyped


    private void baddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baddItemActionPerformed
        //adding the item
        if (lblName.getText().equals("") || lblPrice.getText().equals("") || lblCurStock.getText().equals("")
                || lblTotStock.getText().equals("") || tfQuantity.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Select an Item");
        } else {
            mEvent.setItemName(lblName.getText());
            mEvent.setItemQuantity(Integer.parseInt(tfQuantity.getText()));
            mEvent.setItemPrice(Float.parseFloat(lblPrice.getText()));
            mEvent.addToCart(tableSoldItems, tableStock);
            lblTotal.setText(Float.toString(mEvent.getDisplayAllTotal()));
            clear();
            tfItemCode.setText("");
            tfID.setText("");
        }
    }//GEN-LAST:event_baddItemActionPerformed


    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        // TODO add your handling code here:
        int i = tableSoldItems.getSelectedRow();
        try {
            if (i >= 0) {
                if (!getItemPrice().equals("") || getItemName().equals("") || getTotalQuantity().equals("")) {
                    mEvent.setItemName(getItemName());
                    mEvent.setItemQuantity(Integer.parseInt(getItemQuantity()));
                    mEvent.setItemPrice(Float.parseFloat(getItemPrice()));
                    mEvent.deleteToCart(tableSoldItems, tableStock);
                    lblTotal.setText(Float.toString(mEvent.getDisplayAllTotal()));
                }
            } else {
                JOptionPane.showMessageDialog(null, "Delete Error");
            }
            clear();
            tfID.setText("");
            tfItemCode.setText("");
            tableSoldItems.clearSelection();
            //getSum();
        } catch (NullPointerException e) {

        }

    }//GEN-LAST:event_bDeleteActionPerformed

    private void tfQuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfQuantityKeyReleased
        // TODO add your handling code here:
        //     CurStock();

        mEvent.CurStock(tableSoldItems, tableStock, baddItem, tfID, tfItemCode);
        if (tfQuantity.getText().equals("") || lblTotStock.getText().equals("")) {
            tfQuantity.setText("0");
            tfQuantity.selectAll();
        }
        mEvent.setItemQuantity(Integer.parseInt(tfQuantity.getText()));
        mEvent.setTotalQuantity(Integer.parseInt(lblTotStock.getText()));

        mEvent.autoSum();
        String currentStock = String.valueOf(mEvent.getCurrentStock());
        lblCurStock.setText(currentStock);
        mEvent.setItemName(lblName.getText());


    }//GEN-LAST:event_tfQuantityKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        closeWin();
    }//GEN-LAST:event_formWindowClosing

    private void ItemBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemBackActionPerformed
        // TODO add your handling code here:
        panelChanger(PanelFrame, MainPanel);

    }//GEN-LAST:event_ItemBackActionPerformed

    private void lblLogOutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogOutMouseExited
        aesthetic(lblLogOut, BevelBorder.RAISED, Color.black);
    }//GEN-LAST:event_lblLogOutMouseExited

    private void lblLogOutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogOutMouseEntered
        aesthetic(lblLogOut, BevelBorder.LOWERED, Color.red);
    }//GEN-LAST:event_lblLogOutMouseEntered

    private void lblLogOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogOutMouseClicked
        closeWin();
    }//GEN-LAST:event_lblLogOutMouseClicked
    private void closeWin() {//window closing dialog 
        if (tableSoldItems.getRowCount() != 0) {
            int input = JOptionPane.showOptionDialog(null, "Do you want to exit? Current Transaction will gone", "Exit",
                    JOptionPane.OK_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (input == JOptionPane.OK_OPTION) {
                LoginSystem log = LoginSystem.getInstance();
                mEvent.setTime(lblTime.getText());
                mEvent.timeOut();
                log.setVisible(true);
                log.clearLogin();
                aesthetic(lblLogOut, BevelBorder.RAISED, Color.black);
                setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            } else {
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            }
        } else {
            setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            LoginSystem log = LoginSystem.getInstance();
            mEvent.setTime(lblTime.getText());
            mEvent.timeOut();
            log.setVisible(true);
            log.clearLogin();
            aesthetic(lblLogOut, BevelBorder.RAISED, Color.black);
            dispose();
        }
    }

    private void numberonly(KeyEvent evt) {
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }

    private void updateTableStock(JTable table) {// get the database columns and its rows
        String sql = "select ID,itemName as [Item Name],itemStock as [Item Stock] from itemLists";
        tableUpdates(table, sql);
    }

    private void clear() {//clear fields
        //Thread.sleep(150);
        lblName.setText("");
        lblPrice.setText("");
        tfQuantity.setText("");
        lblTotStock.setText("");
        lblCurStock.setText("");
    }

    private void time() {
        Thread t = new Thread() {

            @Override
            public void run() {
                while (true) {
                    SimpleDateFormat date = new SimpleDateFormat("HH:mm");
                    String dateString = date.format(new Date());
                    lblTime.setText(dateString);
                    try {
                        Thread.sleep(1);
                    } catch (InterruptedException e) {

                    }
                }
            }
        };
        t.start();
    }

    public void user(String name) {
        lblSeller.setText(name);
    }

    public void seller() {
        bOption.setEnabled(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new mainFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ItemBack;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JPanel PanelFrame;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bItemViewer;
    private javax.swing.JButton bNewTransaction;
    private javax.swing.JButton bOption;
    private javax.swing.JButton baddItem;
    private javax.swing.JButton bcashOut;
    private javax.swing.JPanel itemViewer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblCurStock;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblExchange;
    private javax.swing.JLabel lblLogOut;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblSeller;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTotStock;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTransaction;
    private javax.swing.JPanel opPanel;
    private javax.swing.JPanel pricePanel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JPanel tablePanel1;
    private javax.swing.JTable tableSoldItems;
    private javax.swing.JTable tableStock;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfItemCode;
    private javax.swing.JTextField tfQuantity;
    // End of variables declaration//GEN-END:variables

    /**
     * get MainPanel and PanelFrame
     *
     * @return
     */
    public JPanel getMainPanel() {
        return MainPanel;
    }

    public JPanel getFramePanel() {
        return PanelFrame;
    }

    /**
     * @return the itemName
     */
    public String getItemQuantity() {
        return itemQuantity;
    }

    /**
     * @param itemQuantity the itemName to set
     */
    public void setItemQuantity(String itemQuantity) {
        this.itemQuantity = itemQuantity;
    }

    /**
     * @return the ItemQuantity
     */
    public String getTotalQuantity() {
        return totalQuantity;
    }

    /**
     * @param totalQuantity the ItemQuantity to set
     */
    public void setTotalQuantity(String totalQuantity) {
        this.totalQuantity = totalQuantity;
    }

    /**
     * @return the itemPrice
     */
    public String getItemPrice() {
        return itemPrice;
    }

    /**
     * @param itemPrice the itemPrice to set
     */
    public void setItemPrice(String itemPrice) {
        this.itemPrice = itemPrice;
    }

    /**
     * @return the itemName
     */
    public String getItemName() {
        return itemName;
    }

    /**
     * @param itemName the itemName to set
     */
    public void setItemName(String itemName) {
        this.itemName = itemName;
    }

}
